name: CI

on:
  push:
  pull_request:

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings
  CARGO_TERM_COLOR: always
  CLICOLOR: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre_ci:
    uses: dtolnay/.github/.github/workflows/pre_ci.yml@master

  check:
    name: Check
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: Swatinem/rust-cache@v2
      - name: cargo check
        run: nix develop --command just check

  rustfmt:
    name: Rustfmt
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: Swatinem/rust-cache@v2
      - name: cargo fmt
        run: nix develop --command just check-fmt

  clippy:
    name: Clippy
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: Swatinem/rust-cache@v2
      - name: cargo clippy
        run: nix develop --command just clippy

  cargo-deny:
    name: Cargo deny
    runs-on: ubuntu-latest
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    steps:
      - uses: actions/checkout@v4
      - name: Check Rust Code
        uses: EmbarkStudios/cargo-deny-action@v2

  test:
    name: Test
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: Swatinem/rust-cache@v2
      - name: cargo test
        continue-on-error: true # We have plenty of failing tests right now
        cache-on-failure: true
        # Run tests in release mode because otherwise they take *foreeever*
        run: nix develop --command just profile=release test